@page
@model IndexModel

<!DOCTYPE html>
<html>
<head>
    <title>To-Do List</title>
    
</head>
<body>
    <h1>To-Do List</h1>   
    <ul>
        @foreach (var note in Model.Notes)
        {
            <li>
                <input id="note-@note.Id" type="text" value="@note.Content" />
                <button class="update-button" data-id="@note.Id">Update</button>
                <form method="post" asp-page-handler="Delete" asp-route-id="@note.Id">
                    @Html.AntiForgeryToken()
                    <button type="submit">Delete</button>
                </form>
            </li>
        }
    </ul>
    <form method="post">
        @Html.AntiForgeryToken()
        <input type="text" name="newNote" placeholder="Add a new task" />
        <button type="submit">Add</button>
    </form>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var baseUrl = window.location.origin;

            var updateButtons = document.querySelectorAll(".update-button");
            
            updateButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    var noteId = button.getAttribute("data-id");
                    var noteElement = document.getElementById("note-" + noteId);
                    var updatedContent = noteElement.value;

                    fetch(`${baseUrl}/Index?handler=Update&id=${noteId}`, {
                        method: "POST",
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: `updatedContent=${encodeURIComponent(updatedContent)}`
                    })
                        .then(response => response.text())
                        .then(data => {
                            
                            noteElement.value = updatedContent;
                        })
                        .catch(error => {
                            console.error('Update fetch error:', error);
                        });
                });
            });


            var deleteButtons = document.querySelectorAll(".delete-button");
            deleteButtons.forEach(function (button) {
                button.addEventListener("click", function (event) {
                    event.preventDefault();

                    var noteId = button.getAttribute("data-id");
                    var listItem = button.parentElement;

                    fetch(`${baseUrl}/?handler=OnPostDeleteAsync&id=${noteId}`, {
                        method: "POST",
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                        .then(response => {
                            if (response.ok) {
                                listItem.remove();
                            }
                        })
                        .catch(error => {
                            console.error('Delete fetch error:', error);
                        });
                });
            });
        });
    </script>
</body>
</html>
